version: "3.8"

services:
  # nginx:
  #   image: nginx:1.25.3-alpine3.18
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - api1
  #     - api2
  #   ports:
  #       # Obrigat√≥rio expor/usar a porta 9999 no load balancer!
  #     - "9999:9999" 
  #   networks:
  #     - web
  #     - internal
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.17"
  #         memory: "10MB"

  api1: &api
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    # # deploy:
    # #   resources:
    # #     limits:
    # #       cpus: "0.6"
    # #       memory: "200MB"
    # command: server start

    ports:
      - "9999:5000"

    environment:
      APP_DATABASE_HOST: db   
      APP_DATABASE_USER: postgres
      APP_DATABASE_PASSWORD: mysecretpassword 
      APP_DATABASE_DATABASE: postgres

    networks:
      - internal
  
  # api2:
  #   <<: *api
  #   environment:
  #     APP_DATABASE_HOST: db   
  #     APP_DATABASE_USER: postgres
  #     APP_DATABASE_PASSWORD: mysecretpassword 
  #     APP_DATABASE_DATABASE: postgres

  #     APP_CACHE_HOST: redis
  #     APP_CACHE_PORT: 6379

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.13"
          memory: "140MB"

networks:
  web:
    external: true
  internal:
    external: false
